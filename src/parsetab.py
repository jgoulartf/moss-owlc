
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS EXACTLY IDENT_LPAREN INDIVIDUAL KEYWORD LPAREN MAX MIN NAMESPACE NOT NUMERAL OR PROPERTY RPAREN SOME SPECIAL_SYMBOL THAT TWOPOINTS TYPE VALUEprimitive_class : KEYWORD TWOPOINTS CLASS sub_class_of disjoint_classes individuals\n                       | empty\n    sub_class_of : KEYWORD TWOPOINTS sub_class_expression sub_class_of\n                    | SPECIAL_SYMBOL sub_class_expression sub_class_of\n                    | empty\n    \n        sub_class_expression : PROPERTY KEYWORD CLASS\n                             | PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE SPECIAL_SYMBOL SPECIAL_SYMBOL SPECIAL_SYMBOL NUMERAL SPECIAL_SYMBOL\n                             | empty\n    \n        disjoint_classes : KEYWORD TWOPOINTS CLASS disjoint_classes\n                        | SPECIAL_SYMBOL CLASS\n                        | empty\n    \n        individuals : KEYWORD TWOPOINTS INDIVIDUAL individuals\n                    | SPECIAL_SYMBOL INDIVIDUAL\n                    | empty\n    empty :'

_lr_action_items = {'KEYWORD':([0,5,7,8,9,10,12,14,15,16,17,18,24,25,27,28,31,33,34,42,],[2,6,11,-15,-5,-15,20,-11,6,26,-8,6,-10,-4,-3,11,-6,-9,20,-7,]),'$end':([0,1,3,5,7,8,9,10,12,14,15,17,18,21,23,24,25,27,28,30,31,33,34,36,42,],[-15,0,-2,-15,-15,-15,-5,-15,-15,-11,-15,-8,-15,-1,-14,-10,-4,-3,-15,-13,-6,-9,-15,-12,-7,]),'TWOPOINTS':([2,6,11,20,32,],[4,10,19,29,35,]),'CLASS':([4,13,19,26,],[5,24,28,31,]),'SPECIAL_SYMBOL':([5,7,8,9,10,12,14,15,17,18,24,25,27,28,31,33,34,37,38,39,41,42,],[8,13,-15,-5,-15,22,-11,8,-8,8,-10,-4,-3,13,-6,-9,22,38,39,40,42,-7,]),'PROPERTY':([8,10,],[16,16,]),'INDIVIDUAL':([22,29,],[30,34,]),'NAMESPACE':([26,],[32,]),'TYPE':([35,],[37,]),'NUMERAL':([40,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'primitive_class':([0,],[1,]),'empty':([0,5,7,8,10,12,15,18,28,34,],[3,9,14,17,17,23,9,9,14,23,]),'sub_class_of':([5,15,18,],[7,25,27,]),'disjoint_classes':([7,28,],[12,33,]),'sub_class_expression':([8,10,],[15,18,]),'individuals':([12,34,],[21,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> primitive_class","S'",1,None,None,None),
  ('primitive_class -> KEYWORD TWOPOINTS CLASS sub_class_of disjoint_classes individuals','primitive_class',6,'p_primitive_class','osa.py',24),
  ('primitive_class -> empty','primitive_class',1,'p_primitive_class','osa.py',25),
  ('sub_class_of -> KEYWORD TWOPOINTS sub_class_expression sub_class_of','sub_class_of',4,'p_sub_class_of','osa.py',34),
  ('sub_class_of -> SPECIAL_SYMBOL sub_class_expression sub_class_of','sub_class_of',3,'p_sub_class_of','osa.py',35),
  ('sub_class_of -> empty','sub_class_of',1,'p_sub_class_of','osa.py',36),
  ('sub_class_expression -> PROPERTY KEYWORD CLASS','sub_class_expression',3,'p_sub_class_expression','osa.py',41),
  ('sub_class_expression -> PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE SPECIAL_SYMBOL SPECIAL_SYMBOL SPECIAL_SYMBOL NUMERAL SPECIAL_SYMBOL','sub_class_expression',10,'p_sub_class_expression','osa.py',42),
  ('sub_class_expression -> empty','sub_class_expression',1,'p_sub_class_expression','osa.py',43),
  ('disjoint_classes -> KEYWORD TWOPOINTS CLASS disjoint_classes','disjoint_classes',4,'p_disjoint_classes','osa.py',48),
  ('disjoint_classes -> SPECIAL_SYMBOL CLASS','disjoint_classes',2,'p_disjoint_classes','osa.py',49),
  ('disjoint_classes -> empty','disjoint_classes',1,'p_disjoint_classes','osa.py',50),
  ('individuals -> KEYWORD TWOPOINTS INDIVIDUAL individuals','individuals',4,'p_individuals','osa.py',55),
  ('individuals -> SPECIAL_SYMBOL INDIVIDUAL','individuals',2,'p_individuals','osa.py',56),
  ('individuals -> empty','individuals',1,'p_individuals','osa.py',57),
  ('empty -> <empty>','empty',0,'p_empty','osa.py',61),
]
