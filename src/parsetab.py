
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND CARDINALITY CLASS EXACTLY IDENT_LPAREN INDIVIDUAL INSTANCE KEYWORD KEYWORD_CLASS KEYWORD_DISJOINT KEYWORD_EQUIVALENTTO KEYWORD_INDIVIDUALS KEYWORD_SUBCLASSOF LCOLCH LKEY LPAREN MAX MIN NAMESPACE NOT NUMERAL OR PROPERTY RCOLCH RKEY RPAREN SOME SPECIAL_SYMBOL THAT TWOPOINTS TYPE VALUES : primitive_class\n            | defined_class\n            | closure_class\n            | nested_class\n            | empty\n    primitive_class : KEYWORD_CLASS TWOPOINTS CLASS sub_class_of disjoint_classes individuals primitive_class\n                       | empty\n    defined_class : KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals defined_class\n                    | empty\n   \n        closure_class : KEYWORD_CLASS TWOPOINTS CLASS sub_class_of\n                      | empty\n    \n        nested_class  : KEYWORD_CLASS TWOPOINTS CLASS equivalent_to\n                      | empty\n    \n        property_expression  : PROPERTY KEYWORD CLASS SPECIAL_SYMBOL property_expression\n                             | PROPERTY KEYWORD property_expression_closure\n                             | PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE SPECIAL_SYMBOL SPECIAL_SYMBOL NUMERAL SPECIAL_SYMBOL\n                             | PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE SPECIAL_SYMBOL NUMERAL SPECIAL_SYMBOL\n\n                             | empty\n    \n        property_expression_closure : LPAREN CLASS property_expression_closure\n                                    | KEYWORD CLASS property_expression_closure\n                                    | KEYWORD CLASS RPAREN property_expression\n                                    | empty\n    nested_descriptions_class : KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals\n                                 | KEYWORD_CLASS TWOPOINTS CLASS equivalent_to\n    enumerated_class : KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals\n                       | KEYWORD_CLASS TWOPOINTS CLASS equivalent_to\n   covered_class : KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals\n                    | KEYWORD_CLASS TWOPOINTS CLASS equivalent_to\n   sub_class_of : KEYWORD_SUBCLASSOF TWOPOINTS sub_class_expression sub_class_of_optional\n                    | KEYWORD_SUBCLASSOF TWOPOINTS CLASS SPECIAL_SYMBOL sub_class_of\n                    | property_expression SPECIAL_SYMBOL sub_class_of\n                    | KEYWORD_SUBCLASSOF CLASS SPECIAL_SYMBOL\n                    | empty\n    sub_class_of_optional  : sub_class_expression sub_class_of\n                              | disjoint_classes\n                              | empty\n    \n        sub_class_expression : PROPERTY KEYWORD CLASS sub_class_expression\n                             | SPECIAL_SYMBOL PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE sub_class_expression\n                             | empty\n    \n        disjoint_classes : KEYWORD_DISJOINT TWOPOINTS CLASS disjoint_classes\n                         | SPECIAL_SYMBOL CLASS disjoint_classes\n                         | empty\n    \n        individuals : KEYWORD_INDIVIDUALS TWOPOINTS INDIVIDUAL individuals\n                    | SPECIAL_SYMBOL INDIVIDUAL\n                    | empty\n    \n        equivalent_to : KEYWORD_EQUIVALENTTO TWOPOINTS equivalent_to_expression\n                      | empty\n    \n       equivalent_to_expression : CLASS KEYWORD LPAREN PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE LCOLCH SPECIAL_SYMBOL SPECIAL_SYMBOL NUMERAL RCOLCH RPAREN\n                                | CLASS KEYWORD LPAREN PROPERTY KEYWORD CLASS RPAREN\n                                | equivalent_to_enumerated_expression\n\n                                | equivalent_to_nested_expression\n                                | empty\n   \n       equivalent_to_enumerated_expression  : LKEY INSTANCE SPECIAL_SYMBOL\n                                            | INSTANCE SPECIAL_SYMBOL\n                                            | INSTANCE RKEY\n                                            | empty\n   \n        equivalent_to_nested_expression : CLASS KEYWORD equivalent_to_nested_expression\n                                        | KEYWORD LPAREN PROPERTY KEYWORD equivalent_to_nested_expression\n                                        | LPAREN PROPERTY KEYWORD CLASS RPAREN equivalent_to_nested_expression\n                                        |\n    \n        class_or    : CLASS KEYWORD class_or\n                    | CLASS class_or\n                    | KEYWORD CLASS\n                    | empty\n    empty :'
    
_lr_action_items = {'KEYWORD_CLASS':([0,9,10,11,14,17,20,21,24,25,27,28,30,32,37,38,42,43,44,45,46,50,51,52,64,65,67,68,69,70,71,73,76,80,81,87,88,89,90,91,93,96,99,106,107,108,110,111,113,117,120,121,124,127,130,131,140,],[7,-65,-65,-65,-33,-65,-42,33,-45,-65,-65,-60,61,-65,-44,-65,-39,-32,-31,-33,-46,-50,-51,-52,-65,-41,-65,-65,-29,-35,-36,-65,-60,-54,-55,-40,-65,-43,-34,-30,-65,-57,-53,-65,-65,-47,-37,-60,-60,-65,-58,-60,-65,-59,-38,-49,-48,]),'$end':([0,1,2,3,4,5,6,9,10,11,14,17,20,21,24,25,27,28,30,32,34,35,37,38,42,43,44,45,46,50,51,52,62,63,64,65,67,68,69,70,71,73,76,80,81,87,88,89,90,91,93,96,99,106,107,108,110,111,113,117,120,121,124,127,130,131,140,],[-65,0,-1,-2,-3,-4,-5,-65,-10,-12,-33,-65,-42,-65,-45,-65,-65,-60,-65,-65,-8,-9,-44,-65,-39,-32,-31,-33,-46,-50,-51,-52,-6,-7,-65,-41,-65,-65,-29,-35,-36,-65,-60,-54,-55,-40,-65,-43,-34,-30,-65,-57,-53,-65,-65,-47,-37,-60,-60,-65,-58,-60,-65,-59,-38,-49,-48,]),'TWOPOINTS':([7,12,15,18,22,33,58,61,109,126,],[8,25,28,31,36,66,84,86,118,132,]),'CLASS':([8,12,19,25,28,29,31,55,59,66,72,75,76,86,98,111,113,119,121,131,],[9,26,32,39,47,56,64,82,85,88,32,93,94,106,114,94,94,125,94,94,]),'KEYWORD_SUBCLASSOF':([9,25,27,38,42,68,71,73,93,106,110,124,130,],[12,-65,12,-65,-39,12,-39,12,-65,12,-37,-65,-38,]),'KEYWORD_EQUIVALENTTO':([9,88,],[15,15,]),'PROPERTY':([9,25,27,38,40,42,49,68,71,72,73,77,83,93,95,101,106,110,124,130,],[16,41,16,41,74,-39,78,16,-39,74,16,97,16,41,112,16,16,-37,41,-38,]),'KEYWORD_DISJOINT':([9,10,14,20,25,27,32,38,42,43,44,45,64,65,68,69,70,71,73,87,90,91,93,106,110,117,124,130,],[-65,18,-33,-42,-65,-65,18,18,-39,-32,-31,-33,18,-41,-65,-29,-35,-36,-65,-40,-34,-30,-65,-65,-37,18,-65,-38,]),'SPECIAL_SYMBOL':([9,10,11,13,14,17,20,25,26,27,28,29,32,38,39,42,43,44,45,46,50,51,52,54,56,57,60,64,65,67,68,69,70,71,73,76,79,80,81,82,83,85,87,88,90,91,93,96,99,100,101,102,103,104,105,106,107,108,110,111,113,115,116,117,120,121,123,124,127,128,129,130,131,133,135,136,140,],[-65,19,23,27,-18,23,-42,40,43,-65,-60,-65,19,72,73,-39,-32,-31,-18,-46,-50,-51,-52,80,83,-15,-22,19,-41,23,-65,-29,-35,-36,-65,-60,99,-54,-55,-65,-65,-65,-40,-65,-34,-30,40,-57,-53,-20,-65,-14,-18,116,-19,-65,23,-47,-37,-60,-60,-21,122,19,-58,-60,129,40,-59,133,-17,-38,-49,-16,136,137,-48,]),'KEYWORD_INDIVIDUALS':([9,10,11,14,17,20,25,27,28,32,38,42,43,44,45,46,50,51,52,64,65,67,68,69,70,71,73,76,80,81,87,88,90,91,93,96,99,106,107,108,110,111,113,117,120,121,124,127,130,131,140,],[-65,-65,22,-33,22,-42,-65,-65,-60,-65,-65,-39,-32,-31,-33,-46,-50,-51,-52,-65,-41,22,-65,-29,-35,-36,-65,-60,-54,-55,-40,-65,-34,-30,-65,-57,-53,-65,22,-47,-37,-60,-60,-65,-58,-60,-65,-59,-38,-49,-48,]),'KEYWORD':([16,28,29,41,47,74,76,78,82,85,94,97,111,112,113,121,131,],[29,48,55,75,76,92,48,98,55,55,111,113,48,119,48,48,48,]),'INDIVIDUAL':([23,36,],[37,67,]),'LKEY':([28,],[53,]),'INSTANCE':([28,53,],[54,79,]),'LPAREN':([28,29,48,76,82,85,111,113,121,131,],[49,59,77,95,59,59,49,49,49,49,]),'NAMESPACE':([29,92,119,],[58,109,126,]),'RKEY':([54,],[81,]),'RPAREN':([82,114,125,139,],[101,121,131,140,]),'TYPE':([84,118,132,],[104,124,134,]),'NUMERAL':([116,122,137,],[123,128,138,]),'LCOLCH':([134,],[135,]),'RCOLCH':([138,],[139,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'primitive_class':([0,30,],[2,62,]),'defined_class':([0,21,],[3,34,]),'closure_class':([0,],[4,]),'nested_class':([0,],[5,]),'empty':([0,9,10,11,17,21,25,27,28,29,30,32,38,64,67,68,73,82,83,85,88,93,101,106,107,117,124,],[6,14,20,24,24,35,42,45,52,60,63,20,71,20,24,45,45,60,103,60,108,42,103,45,24,20,42,]),'sub_class_of':([9,27,68,73,106,],[10,44,90,91,117,]),'equivalent_to':([9,88,],[11,107,]),'property_expression':([9,27,68,73,83,101,106,],[13,13,13,13,102,115,13,]),'disjoint_classes':([10,32,38,64,117,],[17,65,70,87,17,]),'individuals':([11,17,67,107,],[21,30,89,21,]),'sub_class_expression':([25,38,93,124,],[38,68,110,130,]),'equivalent_to_expression':([28,],[46,]),'equivalent_to_enumerated_expression':([28,],[50,]),'equivalent_to_nested_expression':([28,76,111,113,121,131,],[51,96,96,120,127,127,]),'property_expression_closure':([29,82,85,],[57,100,105,]),'sub_class_of_optional':([38,],[69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> primitive_class','S',1,'p_start','osa_2.py',16),
  ('S -> defined_class','S',1,'p_start','osa_2.py',17),
  ('S -> closure_class','S',1,'p_start','osa_2.py',18),
  ('S -> nested_class','S',1,'p_start','osa_2.py',19),
  ('S -> empty','S',1,'p_start','osa_2.py',20),
  ('primitive_class -> KEYWORD_CLASS TWOPOINTS CLASS sub_class_of disjoint_classes individuals primitive_class','primitive_class',7,'p_primitive_class','osa_2.py',27),
  ('primitive_class -> empty','primitive_class',1,'p_primitive_class','osa_2.py',28),
  ('defined_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals defined_class','defined_class',6,'p_defined_class','osa_2.py',34),
  ('defined_class -> empty','defined_class',1,'p_defined_class','osa_2.py',35),
  ('closure_class -> KEYWORD_CLASS TWOPOINTS CLASS sub_class_of','closure_class',4,'p_closure_class','osa_2.py',42),
  ('closure_class -> empty','closure_class',1,'p_closure_class','osa_2.py',43),
  ('nested_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to','nested_class',4,'p_nested_class','osa_2.py',49),
  ('nested_class -> empty','nested_class',1,'p_nested_class','osa_2.py',50),
  ('property_expression -> PROPERTY KEYWORD CLASS SPECIAL_SYMBOL property_expression','property_expression',5,'p_property_expression','osa_2.py',67),
  ('property_expression -> PROPERTY KEYWORD property_expression_closure','property_expression',3,'p_property_expression','osa_2.py',68),
  ('property_expression -> PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE SPECIAL_SYMBOL SPECIAL_SYMBOL NUMERAL SPECIAL_SYMBOL','property_expression',9,'p_property_expression','osa_2.py',69),
  ('property_expression -> PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE SPECIAL_SYMBOL NUMERAL SPECIAL_SYMBOL','property_expression',8,'p_property_expression','osa_2.py',70),
  ('property_expression -> empty','property_expression',1,'p_property_expression','osa_2.py',72),
  ('property_expression_closure -> LPAREN CLASS property_expression_closure','property_expression_closure',3,'p_property_expression_closure','osa_2.py',78),
  ('property_expression_closure -> KEYWORD CLASS property_expression_closure','property_expression_closure',3,'p_property_expression_closure','osa_2.py',79),
  ('property_expression_closure -> KEYWORD CLASS RPAREN property_expression','property_expression_closure',4,'p_property_expression_closure','osa_2.py',80),
  ('property_expression_closure -> empty','property_expression_closure',1,'p_property_expression_closure','osa_2.py',81),
  ('nested_descriptions_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals','nested_descriptions_class',5,'p_nested_descriptions_class','osa_2.py',97),
  ('nested_descriptions_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to','nested_descriptions_class',4,'p_nested_descriptions_class','osa_2.py',98),
  ('enumerated_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals','enumerated_class',5,'p_enumerated_class','osa_2.py',104),
  ('enumerated_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to','enumerated_class',4,'p_enumerated_class','osa_2.py',105),
  ('covered_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to individuals','covered_class',5,'p_covered_class','osa_2.py',111),
  ('covered_class -> KEYWORD_CLASS TWOPOINTS CLASS equivalent_to','covered_class',4,'p_covered_class','osa_2.py',112),
  ('sub_class_of -> KEYWORD_SUBCLASSOF TWOPOINTS sub_class_expression sub_class_of_optional','sub_class_of',4,'p_sub_class_of','osa_2.py',118),
  ('sub_class_of -> KEYWORD_SUBCLASSOF TWOPOINTS CLASS SPECIAL_SYMBOL sub_class_of','sub_class_of',5,'p_sub_class_of','osa_2.py',119),
  ('sub_class_of -> property_expression SPECIAL_SYMBOL sub_class_of','sub_class_of',3,'p_sub_class_of','osa_2.py',120),
  ('sub_class_of -> KEYWORD_SUBCLASSOF CLASS SPECIAL_SYMBOL','sub_class_of',3,'p_sub_class_of','osa_2.py',121),
  ('sub_class_of -> empty','sub_class_of',1,'p_sub_class_of','osa_2.py',122),
  ('sub_class_of_optional -> sub_class_expression sub_class_of','sub_class_of_optional',2,'p_sub_class_of_optional','osa_2.py',127),
  ('sub_class_of_optional -> disjoint_classes','sub_class_of_optional',1,'p_sub_class_of_optional','osa_2.py',128),
  ('sub_class_of_optional -> empty','sub_class_of_optional',1,'p_sub_class_of_optional','osa_2.py',129),
  ('sub_class_expression -> PROPERTY KEYWORD CLASS sub_class_expression','sub_class_expression',4,'p_sub_class_expression','osa_2.py',137),
  ('sub_class_expression -> SPECIAL_SYMBOL PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE sub_class_expression','sub_class_expression',7,'p_sub_class_expression','osa_2.py',138),
  ('sub_class_expression -> empty','sub_class_expression',1,'p_sub_class_expression','osa_2.py',139),
  ('disjoint_classes -> KEYWORD_DISJOINT TWOPOINTS CLASS disjoint_classes','disjoint_classes',4,'p_disjoint_classes','osa_2.py',147),
  ('disjoint_classes -> SPECIAL_SYMBOL CLASS disjoint_classes','disjoint_classes',3,'p_disjoint_classes','osa_2.py',148),
  ('disjoint_classes -> empty','disjoint_classes',1,'p_disjoint_classes','osa_2.py',149),
  ('individuals -> KEYWORD_INDIVIDUALS TWOPOINTS INDIVIDUAL individuals','individuals',4,'p_individuals','osa_2.py',155),
  ('individuals -> SPECIAL_SYMBOL INDIVIDUAL','individuals',2,'p_individuals','osa_2.py',156),
  ('individuals -> empty','individuals',1,'p_individuals','osa_2.py',157),
  ('equivalent_to -> KEYWORD_EQUIVALENTTO TWOPOINTS equivalent_to_expression','equivalent_to',3,'p_equivalent_to','osa_2.py',164),
  ('equivalent_to -> empty','equivalent_to',1,'p_equivalent_to','osa_2.py',165),
  ('equivalent_to_expression -> CLASS KEYWORD LPAREN PROPERTY KEYWORD NAMESPACE TWOPOINTS TYPE LCOLCH SPECIAL_SYMBOL SPECIAL_SYMBOL NUMERAL RCOLCH RPAREN','equivalent_to_expression',14,'p_equivalent_to_expression','osa_2.py',172),
  ('equivalent_to_expression -> CLASS KEYWORD LPAREN PROPERTY KEYWORD CLASS RPAREN','equivalent_to_expression',7,'p_equivalent_to_expression','osa_2.py',173),
  ('equivalent_to_expression -> equivalent_to_enumerated_expression','equivalent_to_expression',1,'p_equivalent_to_expression','osa_2.py',174),
  ('equivalent_to_expression -> equivalent_to_nested_expression','equivalent_to_expression',1,'p_equivalent_to_expression','osa_2.py',176),
  ('equivalent_to_expression -> empty','equivalent_to_expression',1,'p_equivalent_to_expression','osa_2.py',177),
  ('equivalent_to_enumerated_expression -> LKEY INSTANCE SPECIAL_SYMBOL','equivalent_to_enumerated_expression',3,'p_equivalent_to_enumerated_expression','osa_2.py',183),
  ('equivalent_to_enumerated_expression -> INSTANCE SPECIAL_SYMBOL','equivalent_to_enumerated_expression',2,'p_equivalent_to_enumerated_expression','osa_2.py',184),
  ('equivalent_to_enumerated_expression -> INSTANCE RKEY','equivalent_to_enumerated_expression',2,'p_equivalent_to_enumerated_expression','osa_2.py',185),
  ('equivalent_to_enumerated_expression -> empty','equivalent_to_enumerated_expression',1,'p_equivalent_to_enumerated_expression','osa_2.py',186),
  ('equivalent_to_nested_expression -> CLASS KEYWORD equivalent_to_nested_expression','equivalent_to_nested_expression',3,'p_equivalent_to_covered_expression','osa_2.py',192),
  ('equivalent_to_nested_expression -> KEYWORD LPAREN PROPERTY KEYWORD equivalent_to_nested_expression','equivalent_to_nested_expression',5,'p_equivalent_to_covered_expression','osa_2.py',193),
  ('equivalent_to_nested_expression -> LPAREN PROPERTY KEYWORD CLASS RPAREN equivalent_to_nested_expression','equivalent_to_nested_expression',6,'p_equivalent_to_covered_expression','osa_2.py',194),
  ('equivalent_to_nested_expression -> <empty>','equivalent_to_nested_expression',0,'p_equivalent_to_covered_expression','osa_2.py',195),
  ('class_or -> CLASS KEYWORD class_or','class_or',3,'p_class_or','osa_2.py',210),
  ('class_or -> CLASS class_or','class_or',2,'p_class_or','osa_2.py',211),
  ('class_or -> KEYWORD CLASS','class_or',2,'p_class_or','osa_2.py',212),
  ('class_or -> empty','class_or',1,'p_class_or','osa_2.py',213),
  ('empty -> <empty>','empty',0,'p_empty','osa_2.py',221),
]
